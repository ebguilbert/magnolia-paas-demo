name: Magnolia PaaS Demo Pipeline

on:
  workflow_dispatch

env:
  MAVEN_CLI_OPTS: "-s ${{ github.workspace }}/.m2/settings.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_USER_PWD: ${{ secrets.MAVEN_USER_PWD }}
  REGISTRY: ghcr.io
  CI_REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  GIT_TAG: ""
  
jobs:

  build-magnolia:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'zulu'
        overwrite-settings: false
        cache: maven                
    - name: Build with Maven
      run: mvn ${{ env.MAVEN_CLI_OPTS }} package
    - name: Archive Magnolia bundle
      uses: actions/upload-artifact@v4
      with:
        name: magnolia-webapp
        path: esservices-project-webapp/target/*.war
        retention-days: 30  

  push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build-magnolia
    steps:
      - uses: actions/checkout@v4  
      - name: Download bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: magnolia-webapp
          path: esservices-project-webapp/target/
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3         
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.CI_REGISTRY_IMAGE }}/magnolia-webapp
          tags: |
            type=sha,prefix=
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./esservices-project-webapp
          file: ./esservices-project-webapp/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/mironet/helm-kubectl-gomplate:v0.0.5
    needs: push-docker-image
    env:
      DEPLOYMENT: esservices-dev
      LE_ENVIRONMENT: letsencrypt-prod 
      HELM_CHART_VERSION: v1.10.0
    steps:
      - uses: actions/checkout@v4
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v3.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - run: kubectl config get-contexts
      - name: Set GIT_TAG env
        run: echo "GIT_TAG=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV      
      - run: cat values.yml | gomplate > ${DEPLOYMENT}.yml
      - run: cat ${DEPLOYMENT}.yml
      - run: helm repo add mironet https://charts.mirohost.ch/
      - run: helm upgrade -i $DEPLOYMENT mironet/magnolia-helm --version $HELM_CHART_VERSION -f $DEPLOYMENT.yml --create-namespace -n $DEPLOYMENT